# This is a basic workflow to help you get started with Actions

name: Esther workflow
on:
  workflow_dispatch:

jobs:
  A:
    runs-on: ubuntu-latest
    steps:
      - run: echo "$(date +'%Y-%m-%d %H:%M:%S %Z')"
              
  D:
    runs-on: ubuntu-latest
    outputs:
      hello: ${{ steps.world.outputs.world }}
    steps:
      - name: set output
        id: world
        run: echo "::set-output name=world::world"
  E:
    needs: D
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.D.outputs.hello }}
      - name: test
        env:
          data: >-
            {"release": 
            {"name": "${{ needs.D.outputs.hello }}"}, 
            "promotion": 
            {"releaseName": ${{ needs.D.outputs.hello }}, 
            "time": "time", 
            "channel": "nightly"}}
        run: echo ${{ env.data }}   
      - name: test 2
        env:
          time: $(date +'%Y-%m-%d %H:%M:%S %Z')
        run: echo ${{ env.time }}
            
#       - name: Create nightly event on the release calendar
#         uses: fjogeleit/http-request-action@v1
#         with:
#           url: '${{ secrets.CALENDAR_URI}}'
#           data: >-
#             {"release": 
#             {"name": "${{ needs.D.outputs.hello }}"}, 
#             "promotion": 
#             {"releaseName": ${{ needs.D.outputs.hello }}, 
#             "time": "${{ env.datestring }}", 
#             "channel": "nightly"}}
#           bearerToken: ${{ secrets.CALENDAR_TOKEN }}
#         env:
#           datestring: $(date +'%Y-%m-%d %H:%M:%S %Z')
  
  F:
    runs-on: ubuntu-latest
    needs: [D, E]
    steps:
      - run: echo D hello ${{ needs.D.outputs.hello }}
      - run: echo E hello ${{ needs.E.outputs.hello }}


