# This is a basic workflow to help you get started with Actions

name: Esther workflow
on:
  workflow_dispatch:
    inputs:
      override:
        type: string

jobs:
  C:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger kim.yml
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.github.com/repos/estherkim/good-bot/actions/workflows/kim.yml/dispatches'
          bearerToken: ${{ secrets.ACCESS_TOKEN }}
          # data: '{"ref":"main","inputs":{"a":"hello","b":"world"}}'
          data: ${{ toJSON(env.DATA) }}
        env:
          DATA: |
            {
              "ref": "main",
              "inputs": 
              {
                "a": "hello",
                "b": "world"
              }
            }
            

  A:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
      - name: get matrix
        run: |
          MATRIX=$(npx node ./get-matrix.js)
          echo $MATRIX
      - run: echo "$(date +'%Y-%m-%d %H:%M:%S %Z')"
      
  B:
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
      - name: always run
        if: ${{ always() }} && ${{ github.event.inputs.override }}
        # if: ${{ always() }}
        run: echo Bbbbb
              
  D:
    runs-on: ubuntu-latest
    outputs:
      hello: ${{ steps.day.outputs.day }}
    steps:
      - name: set output
        id: day
        run: echo "::set-output name=day::$(date +%d)"
  E:
    needs: D
    runs-on: ubuntu-latest
    if: github.event.inputs.override || (2 <= needs.d.outputs.hello && needs.d.outputs.hello  <= 3)
    steps:
      - run: echo ${{ needs.D.outputs.hello }}
      - name: test
        env:
          data: >-
            {"release": 
            {"name": "${{ needs.D.outputs.hello }}"}, 
            "promotion": 
            {"releaseName": ${{ needs.D.outputs.hello }}, 
            "time": "time", 
            "channel": "nightly"}}
        run: echo ${{ env.data }}   
      - name: test 2
        env:
          time: $(date +'%Y-%m-%d %H:%M:%S %Z')
        run: echo ${{ env.time }}
  
  F:
    runs-on: ubuntu-latest
    needs: [D, E]
    steps:
      - run: echo D hello ${{ needs.D.outputs.hello }}
      - run: echo E hello ${{ needs.E.outputs.hello }}


