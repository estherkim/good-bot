name: publish npm packages
on:
  workflow_dispatch:
    inputs:
      ampversion:
        description: "AMP version"
        required: true
      tag:
        description: "NPM package tag (latest | nightly)"
        required: true
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      extensions: ${{ steps.get-extensions.outputs.extensions }}
    steps:
      - name: Print inputs
        run: |
          echo "AMP version: ${{github.event.inputs.ampversion}}"
          echo "npm tag: ${{github.event.inputs.tag}}"
          echo "dir=https://raw.githubusercontent.com/ampproject/amphtml/main/build-system/npm-publish" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Get latest scripts
        run: wget -q "${{env.dir}}/get-extensions.js" -O ./build-system/npm-publish/get-extensions.js
#       - name: Get extensions to publish
#         id: get-extensions
#         run: |
#           EXTENSIONS=$(node ./build-system/npm-publish/get-extensions.js)          
#           echo "::set-output name=extensions::{\"include\":${EXTENSIONS}}"
  publish:
    environment: NPM_TOKEN
    needs: setup
    runs-on: ubuntu-latest
#     strategy:
#       matrix: ${{ fromJson(needs.setup.outputs.extensions) }}
    steps:
      - name: Get latest scripts
        run: |
          wget -q "${{env.dir}}/utils.js" -O ./build-system/npm-publish/utils.js
          wget -q "${{env.dir}}/build-npm-binaries.js" -O ./build-system/npm-publish/build-npm-binaries.js
          wget -q "${{env.dir}}/write-package-files.js" -O ./build-system/npm-publish/write-package-files.js
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.events.inputs.ampversion }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org
      - name: Build package
        run: |
          npm install
          node ./build-system/publish-npm/build-npm-binaries.js ${{ matrix.extension }} ${{ matrix.majorversion }}
          node ${{ github.workspace }}/build-system/publish-npm/write-package-json.js ${{ matrix.extension }} ${{ github.event.inputs.ampversion }} ${{ github.event.inputs.tag }}
      - name: Publish package for nightly releases
        if: github.event.inputs.tag != 'latest'
        run: npm publish ./extensions/${{ matrix.extension }}/${{ matrix.version }} --access public --tag ${{ github.event.inputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Tag package as latest for stable releases
        if: github.event.inputs.tag == 'latest'
        run: |
          NPM_PACKAGE=$(jq -r .name ./extensions/${{ matrix.extension }}/${{ matrix.version }}/package.json)
          NPM_VERSION=$(jq -r .version ./extensions/${{ matrix.extension }}/${{ matrix.version }}/package.json)
          echo "Processing ${NPM_PACKAGE}@${NPM_VERSION}"
          if [[ $(npm view ${NPM_PACKAGE}@${NPM_VERSION}) ]]; then
            npm dist-tag add ${NPM_PACKAGE}@${NPM_VERSION} latest
          else
            npm publish ./extensions/${{ matrix.extension }}/${{ matrix.version }} --access public --tag latest
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
